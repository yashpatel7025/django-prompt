# Generated by Django 3.1.5 on 2021-01-11 00:23

from faker import Faker
from django.db import migrations
from django.utils import timezone

ORPHAN_ESSAYS = 10
COMPLETED_FEEDBACK_REQUESTS = 10
OPEN_REVISIONS = 10  # Must be <= COMPLETED_FEEDBACK_REQUESTS
OPEN_NON_REVISIONS = 10
fake = Faker()


def create_essay(Essay, User, revision_of=None):
	admin_user = User.objects.filter(is_superuser=True).first()
	return Essay.objects.create(
		name=' '.join(fake.words(nb=5)),
		uploaded_by=admin_user,
		content=fake.paragraph(nb_sentences=5),
		revision_of=revision_of,
	)


# This migration installs a bunch of data
def install_essay_and_feedback_requests(apps, schema_editor):
	Essay = apps.get_model('project', 'Essay')
	FeedbackRequest = apps.get_model('project', 'FeedbackRequest')
	User = apps.get_model('project', 'User')

	if not User.objects.filter(is_superuser=True).exists():
		raise Exception(
			'Things are working as expected! Please create a superuser with `python manage.py createsuperuser`' +
			' and re-run migrations. The migrations will set up feedback requests assigned to your superuser.'
		)

	for i in range(ORPHAN_ESSAYS):
		create_essay(Essay, User)

	for i in range(COMPLETED_FEEDBACK_REQUESTS):
		essay = create_essay(Essay, User)
		feedback_request = FeedbackRequest.objects.create(essay=essay, edited=True, deadline=timezone.now())

	for i in range(OPEN_REVISIONS):
		essay = create_essay(
			Essay,
			User,
			revision_of=Essay.objects.filter(feedback_request__edited=True, revisions__isnull=True).first()
		)
		essay.name += ' (Revision)'
		essay.save()
		feedback_request = FeedbackRequest.objects.create(essay=essay, edited=False, deadline=timezone.now())

	for i in range(OPEN_NON_REVISIONS):
		essay = create_essay(Essay, User)
		feedback_request = FeedbackRequest.objects.create(essay=essay, edited=False, deadline=timezone.now())

	all_superusers = User.objects.filter(is_superuser=True)
	for fr in FeedbackRequest.objects.all():
		fr.assigned_editors.set(all_superusers)


class Migration(migrations.Migration):

	dependencies = [
		('project', '0002_auto_20210111_0023'),
	]

	operations = [
		migrations.RunPython(install_essay_and_feedback_requests, reverse_code=migrations.RunPython.noop),
	]
